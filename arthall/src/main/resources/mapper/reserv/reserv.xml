<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reserv">
	
	<!-- Admin -->
	<!-- 예매 목록에서 검색 -->
	<select id="count" parameterType="reserv.ReservVO" resultType="Integer"> 
	SELECT COUNT(*) FROM reserv
		<where>
        	<!-- 날짜x, 검색어 o,x -->
        	<if test="startDate == null or startDate == '' or endDate == null or endDate == ''">
        		<!-- 특정 항목에서 검색  -->
				<if test="stype != 'all' and sval != null and sval !=''" >
                	${stype} like '%${sval}%'
                </if>
               	<!-- 전체 항목에서 검색 -->
               	<if test="stype == 'all' and sval != null and sval !=''" >
               	    name like '%${sval}%' OR playName like '%${sval}%' OR hallNo like '%${sval}%'
               	</if>
            </if>
            
            <!-- 날짜o, 검색어 o,x -->
            <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
            	<!-- 검색어 없을때 -->
               	<if test="stype == 'all' and (sval == null or sval =='') " >
                	reservDate BETWEEN #{startDate} AND #{endDate}
               	</if>
               	<!-- stype:all, sval:o -->
               	<!-- stype all인 경우는 검색어가 확실히? 있음  -->
               	<if test="stype == 'all' and (sval != null and sval !='') ">
                  	(name like '%${sval}%' OR playName like '%${sval}%' OR hallNo LIKE '%${sval}%') AND
                  	reservDate in 
                  	(SELECT distinct reservDate 
                  	FROM reserv WHERE reservDate 
                  	BETWEEN #{startDate} AND #{endDate})
               	</if>
	         
	         	<!-- stype!=all, sval: o -->
	         	<!-- stype all이 아닌 경우는 검색어가 확실히? 있음-->
	            <if test="stype != 'all' and sval != null and sval !=''">
					(${stype} like '%${sval}%') AND
					reservDate in 
					(SELECT distinct reservDate 
					FROM reserv WHERE reservDate 
					BETWEEN #{startDate} AND #{endDate})
	            </if>
	         </if>
	      </where>
	</select>
	

	<!-- 예매 목록 -->
	<select id="list" parameterType="reserv.ReservVO" resultType="reserv.ReservVO">
	   SELECT * FROM reserv
	   <where>
	   <!-- 날짜x, 검색어 o,x -->
	   		<if test="startDate == null or startDate == '' or endDate == null or endDate == ''">
	            <!-- 특정 항목에서 검색  -->
	            <if test="stype != 'all' and sval != null and sval !=''" >
	                ${stype} like '%${sval}%'
	            </if>
	            <!-- 전체 항목에서 검색  -->
	            <if test="stype == 'all' and sval != null and sval !=''" >
	                name like '%${sval}%' OR playName like '%${sval}%' OR hallNo like '%${sval}%'
	            </if>
	         </if>
	         
	         <!-- 날짜o, 검색어 o,x -->
	         <if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
	            <!-- 검색어 없을 때 -->
	            <if test="stype == 'all' and (sval == null or sval =='') " >
	                reservDate BETWEEN #{startDate} AND #{endDate}
	            </if>
	            
	            <!-- stype:all, sval:o -->
	            <!-- stype all인 경우는 검색어가  확실히? 있음 -->
	            <if test="stype == 'all' and (sval != null and sval !='') ">
	               (name like '%${sval}%' OR playName like '%${sval}%' OR hallNo LIKE '%${sval}%') AND
	               reservDate in 
	               (SELECT distinct reservDate 
	               FROM reserv WHERE reservDate 
	               BETWEEN #{startDate} AND #{endDate})
	            </if>
	            
	            <!-- stype!=all, sval: o -->
	            <!-- stype all이 아닌 경우는 검색어가  확실히? 있음 -->
	            <if test="stype != 'all' and sval != null and sval !=''">
	               (${stype} like '%${sval}%') AND
	               reservDate in 
	               (SELECT distinct reservDate 
	               FROM reserv WHERE reservDate 
	               BETWEEN #{startDate} AND #{endDate})
	            </if>
	         </if>
	   </where>
	   ORDER BY no desc
	   LIMIT #{startRow},#{size}
	</select>
	
	
	<!-- 티켓 목록 -->
	<select id="ticketlist" parameterType="reserv.TicketVO" resultType="reserv.TicketVO">
	   SELECT * FROM ticket
	   WHERE reservNo like '%${reservNo}%' 
	</select>
   
   
	<!-- User -->
	<!-- 공연 -->  
	<select id="playOne" parameterType="reserv.ReservVO" resultType="play.PlayVO">
		select * from play WHERE playName = #{playName}
	</select>

	<select id="playList" parameterType="reserv.ReservVO" resultType="play.PerformVO">
		select * from perform WHERE playName = #{playName}
	</select>

	<select id="playPPrice" parameterType="reserv.ReservVO" resultType="play.PerformVO">
		select * from perform WHERE playName = #{playName} AND time = #{time}
	</select>

	<select id="playEPrice" parameterType="reserv.ReservVO" resultType="play.ExhibitVO">
		select * from exhibit WHERE playName = #{playName}
	</select>
   
   
   	<!-- 홀정보 -->
	<select id="hall" parameterType="reserv.ReservVO" resultType="reserv.HallVO">
		SELECT * FROM hall WHERE hallName = #{hallName}
	</select>
	
	
	<!-- 예매 정보 -->
	<insert id="reservOne" parameterType="reserv.ReservVO">
		INSERT INTO reserv
			(reservNo, memberNo, name, reservDate, playNo, playName, playDate, time,
				hallNo, hallName, pay, price, seat, filename)
		VALUES
			(#{reservNo}, #{memberNo}, #{name}, now(), #{playNo}, #{playName}, #{playDate},
				#{time}, #{hallNo}, #{hallName}, #{pay}, #{price}, #{seat}, #{filename});
		<selectKey keyProperty="no" resultType="Integer" order="AFTER">
			SELECT last_insert_id();
		</selectKey>
	</insert>
	
   
	<!-- 티켓 정보 -->
	<insert id="reservTicket" parameterType="reserv.TicketVO">
		INSERT INTO ticket
			(reservNo, seatType, price, pay)
		VALUES
			(#{reservNo}, #{seatType}, #{price}, #{pay});
		<selectKey keyProperty="no" resultType="Integer" order="AFTER">
			SELECT last_insert_id();
		</selectKey>
	</insert>
   
   
	<!-- 마지막 예매 정보 -->
	<select id="reservNumber" resultType="reserv.ReservVO">
		SELECT * FROM reserv ORDER BY NO DESC LIMIT 1
	</select>
   
   
   	<!-- 남은 공연 정보 -->
	<select id="reservSess" parameterType="member.MemberVO" resultType="reserv.ReservVO">
		SELECT * FROM reserv WHERE memberNo = #{no} and (playDate > now()) and (pay!="결제취소") ORDER BY playDate
	</select>
	
	
	<!-- 지난 공연 정보 -->
	<select id="reservSessPass" parameterType="member.MemberVO" resultType="reserv.ReservVO">
		SELECT * FROM reserv WHERE memberNo = #{no} and now() > playDate ORDER BY playDate
	</select>
   
   
	<!-- 취소한 공연 정보 -->
	<select id="reservSessCancle" parameterType="member.MemberVO" resultType="reserv.ReservVO">
		SELECT * FROM reserv WHERE memberNo = #{no} and (playDate > now()) and (pay="결제취소") ORDER BY playDate desc
	</select>
	
	
	<!-- 예매 취소 reserv-->
	<update id="cancleReserv" parameterType="reserv.ReservVO">
		UPDATE reserv SET
			pay="결제취소"
		WHERE reservNo=#{reservNo}
	</update>
   
   
	<!-- 예매 취소 ticket -->
	<update id="cancleTicket" parameterType="reserv.ReservVO">
		UPDATE ticket SET 
			pay="결제취소" 
		WHERE reservNo like '%${reservNo}%' 
	</update>
   
</mapper>