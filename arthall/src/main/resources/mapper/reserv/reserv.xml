<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="reserv">

	<select id="count" parameterType="reserv.ReservVO" resultType="Integer"> 
		SELECT COUNT(*) FROM reserv
			<where>
			<!-- 날짜x, 검색어 o,x -->
				<if test="startDate == null or startDate == '' or endDate == null or endDate == ''">
					<!-- 홀 뭔가 안어울린다 정준아 -->
					<!-- 여기는 검색어가 특정 분야만 선택할때 -->
					<if test="stype != 'all' and sval != null and sval !=''" >
					 	${stype} like '%${sval}%'
					</if>
					<!-- 여기는 검색어가 전체일때 -->
					<if test="stype == 'all' and sval != null and sval !=''" >
					 	name like '%${sval}%' OR playName like '%${sval}%' OR hallNo like '%${sval}%'
					</if>
				</if>
				
				<!-- 날짜o, 검색어 o,x -->
				<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					<!-- 검색어 없을때 -->
					<if test="stype == 'all' and (sval == null or sval =='') " >
					 	reservDate BETWEEN #{startDate} AND #{endDate}
					 	
					</if>
					
					<!-- stype:all, sval:o -->
					<!-- stype all인 경우에 검색어가  확실히 있다~~~~ -->
					<if test="stype == 'all' and (sval != null and sval !='') ">
						(name like '%${sval}%' OR playName like '%${sval}%' OR hallNo LIKE '%${sval}%') AND
						reservDate in 
						(SELECT distinct reservDate 
						FROM reserv WHERE reservDate 
						BETWEEN #{startDate} AND #{endDate})
					</if>
					
					<!-- stype!=all, sval: o -->
					<!-- stype all이 아닌 경우에  경우에 검색어가  확실히 있다~~~~ -->
					<if test="stype != 'all' and sval != null and sval !=''">
						(${stype} like '%${sval}%') AND
						reservDate in 
						(SELECT distinct reservDate 
						FROM reserv WHERE reservDate 
						BETWEEN #{startDate} AND #{endDate})
					</if>
				</if>
			</where>
	</select>

	<select id="list" parameterType="reserv.ReservVO" resultType="reserv.ReservVO">
		SELECT * FROM reserv
		<where>
		<!-- 날짜x, 검색어 o,x -->
				<if test="startDate == null or startDate == '' or endDate == null or endDate == ''">
					<!-- 홀 뭔가 안어울린다 정준아 -->
					<!-- 여기는 검색어가 특정 분야만 선택할때 -->
					<if test="stype != 'all' and sval != null and sval !=''" >
					 	${stype} like '%${sval}%'
					</if>
					<!-- 여기는 검색어가 전체일때 -->
					<if test="stype == 'all' and sval != null and sval !=''" >
					 	name like '%${sval}%' OR playName like '%${sval}%' OR hallNo like '%${sval}%'
					</if>
				</if>
				
				<!-- 날짜o, 검색어 o,x -->
				<if test="startDate != null and startDate != '' and endDate != null and endDate != ''">
					<!-- 검색어 없을때 -->
					<if test="stype == 'all' and (sval == null or sval =='') " >
					 	reservDate BETWEEN #{startDate} AND #{endDate}
					</if>
					
					<!-- stype:all, sval:o -->
					<!-- stype all인 경우에 검색어가  확실히 있다~~~~ -->
					<if test="stype == 'all' and (sval != null and sval !='') ">
						(name like '%${sval}%' OR playName like '%${sval}%' OR hallNo LIKE '%${sval}%') AND
						reservDate in 
						(SELECT distinct reservDate 
						FROM reserv WHERE reservDate 
						BETWEEN #{startDate} AND #{endDate})
					</if>
					
					<!-- stype!=all, sval: o -->
					<!-- stype all이 아닌 경우에  경우에 검색어가  확실히 있다~~~~ -->
					<if test="stype != 'all' and sval != null and sval !=''">
						(${stype} like '%${sval}%') AND
						reservDate in 
						(SELECT distinct reservDate 
						FROM reserv WHERE reservDate 
						BETWEEN #{startDate} AND #{endDate})
					</if>
				</if>
		</where>
		ORDER BY reservDate desc
		LIMIT #{startRow},#{size}
	</select>
	
	<update id="cancleReserv" parameterType="reserv.ReservVO">
		UPDATE reserv SET
			pay="결제취소"
		WHERE reservNo=#{reservNo}
	</update>
	
	<update id="cancleTicket" parameterType="reserv.ReservVO">
		UPDATE ticket SET 
			pay="결제취소" 
		WHERE reservNo=#{reservNo}
	</update>
	
	
	<!-- ticket 조인.. -form 정준 -->
	<select id="ticketlist" parameterType="reserv.TicketVO" resultType="reserv.TicketVO">
		SELECT
			*
		FROM ticket
		WHERE reservNo = #{reservNo}
	</select>
	
	<select id="playOne" parameterType="reserv.ReservVO" resultType="play.PlayVO">
		select * from play WHERE playName = #{playName}
	</select>
	
	<!-- 여기 reservVO에 playName이 있고 이걸로 perform에서 조회하는거 -->
	<select id="playList" parameterType="reserv.ReservVO" resultType="play.PerformVO">
		select * from perform WHERE playName = #{playName}
	</select>
	
	
	<insert id="reservOne" parameterType="reserv.ReservVO">
		INSERT INTO reserv
			(reservNo, memberNo, name, reservDate, playNo, playName, playDate, time, hallNo, hallName, pay)
		VALUES
			(#{reservNo}, #{memberNo}, #{name}, now(), #{playNo}, #{playName}, #{playDate},
				#{time}, #{hallNo}, #{hallName}, #{pay});
		<selectKey keyProperty="no" resultType="Integer" order="AFTER">
			SELECT last_insert_id();
		</selectKey>
	</insert>
	
	<select id="hall" parameterType="reserv.ReservVO" resultType="reserv.HallVO">
		SELECT * FROM hall WHERE hallName = #{hallName}
	</select>
</mapper>